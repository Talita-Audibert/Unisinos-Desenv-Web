# Grupo Delta
	Nomes:  Édson Matos, Mateus Teixeira, Mauro Schütz e Talita Audibert
	Curso: Desenvolvimento para a Web
	
# Introdução do Aplicativo

	O aplicativo de enquadra como um gerenciador de listas/catalogo, o cliente
	faz a seleção do carro a ser alugado e o período de tempo que este
	vai ser usado, a parte de reservas mostra os carros reservados pelo
	cliente local que está acessando o aplicativo.

# Tecnologias Usadas

* jQuery
	Usado para as requisições dos formulários HTML via Ajax, assim como
	alteração DOM dos elementos visuais
	
* Twitter BootStrap
	Elementos visuais prontos para serem usados, assim como esquemas de
	espaçamento e padrões para formulários e janelas de aviso / confirmação.
	
* BootStrap-DateTimePicker
	Extensão / Plugin para o BootStrap para apresentação de um calendário (data + hora)
	no momento de escolha das datas de alocação.

* History-API
	API W3C para gerenciamento de histórico de navegação, fazendo com que endereços possam
	ser adicionados e permitir que o navegador navegue pelo histórico e o ajax faça as
	requisições para as páginas acessadas, pode-se ser usado em conjunto com a sessionStorage
	para manter dados preenchidos entre as navegações sem perda de tempo para alteração de
	algum dado.

* localStorage
	API W3C para armazenamento local, semelhante a cookies, porem somente sendo acessado
	via JavaScript na parte cliente, usado como banco de dados	local antes de ser feita
	a implementação servidor do sistema.

# Funcionamento
	O cliente faz a reserva na página inicial do aplicativo, o código da aplicação pega os
	dados de reserva e armazena numa variável em localStorange, onde estas reservas podem
	ser consultadas na página de reserva. O formulário de contato foi criado somente para
	ser então implementado na segunda etapa	do trabalho, onde o envio e checagem serão feitas
	via servidor.

# Limitações
	As limitações atuais são listadas abaixo e devem ser corrigidas na implementação do servidor.
	
	- A History API registra páginas inexistentes no histórico e só podem ser acessadas a partir
	da página inicial, essa limitação poderá ser corrigida na implementação da aplicação do lado
	servidor, onde as páginas realmente existiram.
	- Como não há um banco de dados e cruzamento de registros, somente o cliente que está acessando
	atualmente poderá "alugar" os carros, já que períodos de aluguel e quais carros já estão alocados
	não podem ser verificados dos outros clientes, sendo assim não há efetivamente um cruzamento
	de dados de reserva.
	- Por falta de um servidor Web disponível não pode ser feita a verificação em um ambiente de
	um tablet ou mobile para ver se está inteiramente funcional nesse meio.

# Próximos Passos (ToDo)
	- Escolher o carro a ser reservado via carrossel da direita da índice
	- Criar as páginas que estão sendo endereçadas pela History-API (quem.html, reservas.html, categorias.html e contatos.html)
		* tarefa a ser feita pela parte do servidor Web
	- Concluir o formulário de contato na próxima etapa (servidor web)
	- Checar os periodos de reservas
		* tarefa a ser feita pela parte do servidor Web e JS

# Breve Conclusão
	O aplicativo está limitado ao seu contexto de acesso local e somente as próximas etapas de implementação
	podem tirar essas limitações, mas o sistema funciona muito bem como sendo uma lista de controle de locação
	para registro local.
